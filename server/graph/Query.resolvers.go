package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"errors"
	"fmt"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id *string) (Node, error) {
	user, err := handleGettingUserFromContext(ctx, r.AuthN)
	if err != nil {
		return nil, err
	}

	if id == nil {
		root, err := r.SFS.GetRoot(user)
		if err != nil {
			return nil, errors.New("failed to get root")
		}
		return root, nil
	}

	node, err := r.SFS.GetNodeByID(user, *id)
	if err != nil {
		return nil, fmt.Errorf("failed to get node %s: %w", *id, err)
	}

	return node, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
